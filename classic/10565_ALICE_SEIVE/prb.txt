10565. Alice Sieve

Problem code: ALICESIE



 

Alice has recently learned to use the Sieve of Eratosthenes, an ancient algorithm for finding allprime numbers up to any given limit. As expected, she was really impressed by it's simplicity andelegancy.Now, she has decided to design her own sieve method: The Sieve of Alice, formally defined by thefollowing procedure, which determines the Sieve of Alice up to a given limit N.1. Create a list of consecutive integers from N to 2 (N, N-1, N-2, ..., 3, 2). All of those N-1numbers are initially unmarked.2. Initially, let P equal N, and leave this number unmarked.3. Mark all the proper divisors of P (i.e. P remains unmarked).4. Find the largest unmarked number from 2 to P – 1, and now let P equal this number.5. If there were no more unmarked numbers in the list, stop. Otherwise, repeat from step 3.Unfortunately, Alice has not found an useful application for it's Sieve. But she still wants to know,for a given limit N, how many integers will remain unmarked.
 

Alice has recently learned to use the Sieve of Eratosthenes, an ancient algorithm for finding all

prime numbers up to any given limit. As expected, she was really impressed by it's simplicity and

elegancy.

Now, she has decided to design her own sieve method: The Sieve of Alice, formally defined by the

following procedure, which determines the Sieve of Alice up to a given limit N.

1. Create a list of consecutive integers from N to 2 (N, N-1, N-2, ..., 3, 2). All of those N-1

numbers are initially unmarked.

2. Initially, let P equal N, and leave this number unmarked.

3. Mark all the proper divisors of P (i.e. P remains unmarked).

4. Find the largest unmarked number from 2 to P – 1, and now let P equal this number.

5. If there were no more unmarked numbers in the list, stop. Otherwise, repeat from step 3.

Unfortunately, Alice has not found an useful application for it's Sieve. But she still wants to know,

for a given limit N, how many integers will remain unmarked.

 

 

Input

 

The first line contains an integer T, the number of test cases (1 ≤ T ≤ 10^4) . Each of the next T lines

contains an integer N ( 2 ≤ N ≤ 10^6).

 

Output

 

Output T lines, one for each test case, containing the required answer.

 

Example

Input:
3
2
3
5
Output:
1
2
3


Analysis:
========
say number is 100
1,2,3,4,5,6,7.....................50, 51, 52, 53, ............. 100

step 1: 100 selected, then numbers below 100/2 are selected.
step 2:  99 selected, then numbers below  99/2 are selected.

so 51 to 100 are left out for sure
now what about 1..50
looking at other way: with numbers from 1 to 50, 
2*50, 2*49, 2*48...........2*26
3*25, 3*24, 3*23, 3*17,
4*16, 4*15, 4*13,
5*12, 5*11,
6*10, 6*9
7*8

So all number are done.
So remaining are top 50 i.e 51 to 100.
n/2
