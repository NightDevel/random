8545. Subset sum

Problem code: MAIN72



 

you are given an array of N integers. Now you want to find the sum of all those integers which can be expressed as the sum of at least one subset of the given array.
You are given an array of N integers. Now you want to find the sum of all those integers which can be expressed as the sum of at least one subset of the given array.

Input

First line contains T the number of test case. then T test cases follow,first line of each test case contains N (1<=N<=100) the number of integers, next line contains N integers, each of them is between 0 and 1000 (inclusive).  

Output

For each test case print the answer in a new line.

Example

Input:
2
2
0 1
3
2 3 2

Output:
1
21
Added by:	Mahesh Chandra Sharma
Date:	2011-03-13
Time limit:	2s
Source limit:	50000B
Memory limit:	256MB
Cluster:	Pyramid (Intel Pentium III 733 MHz)
Languages:	All
Resource:	Own problem used for NSIT-IIITA main contest #7

Analysis: Dynamic programming
Eg: 5 1 2
max sum possible; 8
create a table like
    Items:=>      
Sum:------------------------------------------
||     |  0  | 1 (5)   |   2(5,1)   |3(5,1,2)|
\/-------------------------------------------
  |  0 |  Y  |    Y    |     Y      |    Y   |
  --------------------------------------------
  |  1 |  N  |    N    |     Y      |    Y   | 
  --------------------------------------------
  |  2 |  N  |    N    |     N      |    Y   |
  --------------------------------------------
  |  3 |  N  |    N    |     N      |    Y   |
  --------------------------------------------
  |  4 |  N  |    N    |     N      |    N   | 
  --------------------------------------------
  |  5 |  N  |    Y    |     Y      |    Y   |
  --------------------------------------------
  |  6 |  N  |    N    |     Y      |    Y   | 
  --------------------------------------------
  |  7 |  N  |    N    |     N      |    Y   |
  --------------------------------------------
  |  8 |  N  |    N    |     N      |    Y   |
  --------------------------------------------
c[sum][item] = c[sum][item-1] or 
                c[sum-cost[item]][item-1]
here 
item 1: 5
item 2: 1
item 3: 2

initialization:

c[0][1] = c[0][2] = c[0][3] = 1
becoz, zero sum always possible with any subset as it consists of empty set;

c[sum][0] = 0 for all possible sums
becoz, cannot make a sum with empty set
